import streamlit as st
import pandas as pd
import requests
import plotly.express as px
from datetime import datetime

# C·∫•u h√¨nh giao di·ªán
st.set_page_config(page_title="Th·ªëng K√™ Bi·ªÉn S·ªë Xe", page_icon="üìä", layout="wide")
st.title("üìä Dashboard Th·ªëng K√™ Bi·ªÉn S·ªë Xe")

# API endpoint
DATABASE_API_GET = "http://localhost:8001/get_license_plates"

# H√†m l·∫•y d·ªØ li·ªáu t·ª´ Database Service
@st.cache_data(ttl=60)  # Cache d·ªØ li·ªáu trong 60 gi√¢y ƒë·ªÉ c·∫£i thi·ªán hi·ªáu su·∫•t
def fetch_data(trang_thai=None):
    try:
        params = {"trang_thai": trang_thai} if trang_thai and trang_thai != "T·∫•t c·∫£" else {}
        response = requests.get(DATABASE_API_GET, params=params)
        response.raise_for_status()
        return response.json()
    except requests.RequestException as e:
        st.error(f"L·ªói khi g·ªçi API: {e}")
        return []

# L·∫•y t·∫•t c·∫£ d·ªØ li·ªáu
all_records = fetch_data()

# T√≠nh to√°n th·ªëng k√™
if all_records:
    df = pd.DataFrame(all_records)
    
    # T·ªïng s·ªë xe
    total_vehicles = len(df)
    vehicles_in = len(df[df["trang_thai"] == "V√†o"])
    vehicles_out = len(df[df["trang_thai"] == "Ra"])
    
    # T·ªïng ti·ªÅn (ch·ªâ t√≠nh cho xe ƒë√£ ra)
    total_revenue = df[df["trang_thai"] == "Ra"]["tong_tien"].sum() if "tong_tien" in df else 0
    
    # Hi·ªÉn th·ªã s·ªë li·ªáu ch√≠nh
    col1, col2, col3 = st.columns(3)
    with col1:
        st.metric("T·ªïng s·ªë xe", total_vehicles)
    with col2:
        st.metric("Xe ƒëang trong b√£i (V√†o)", vehicles_in)
    with col3:
        st.metric("Xe ƒë√£ r·ªùi b√£i (Ra)", vehicles_out)
    
    st.metric("T·ªïng doanh thu", f"{total_revenue:,.0f} VND")
    
    # Bi·ªÉu ƒë·ªì s·ªë l∆∞·ª£ng xe theo tr·∫°ng th√°i
    status_counts = df["trang_thai"].value_counts().reset_index()
    status_counts.columns = ["Tr·∫°ng th√°i", "S·ªë l∆∞·ª£ng"]
    fig = px.bar(status_counts, x="Tr·∫°ng th√°i", y="S·ªë l∆∞·ª£ng", title="S·ªë l∆∞·ª£ng xe theo tr·∫°ng th√°i",
                 color="Tr·∫°ng th√°i", color_discrete_map={"V√†o": "blue", "Ra": "green"})
    st.plotly_chart(fig, use_container_width=True)
    
    # B·∫£ng d·ªØ li·ªáu g·∫ßn ƒë√¢y
    st.subheader("Danh s√°ch giao d·ªãch g·∫ßn ƒë√¢y")
    recent_records = df.sort_values(by="thoi_gian_vao", ascending=False).head(10)
    if "thoi_gian_vao" in recent_records:
        recent_records["thoi_gian_vao"] = pd.to_datetime(recent_records["thoi_gian_vao"])
        recent_records["thoi_gian_vao"] = recent_records["thoi_gian_vao"].dt.strftime("%Y-%m-%d %H:%M:%S")
    if "thoi_gian_ra" in recent_records:
        recent_records["thoi_gian_ra"] = pd.to_datetime(recent_records["thoi_gian_ra"], errors="coerce")
        recent_records["thoi_gian_ra"] = recent_records["thoi_gian_ra"].dt.strftime("%Y-%m-%d %H:%M:%S")
    st.dataframe(recent_records[["bien_so", "trang_thai", "thoi_gian_vao", "thoi_gian_ra", "tong_tien"]], use_container_width=True)
else:
    st.warning("Kh√¥ng c√≥ d·ªØ li·ªáu ƒë·ªÉ hi·ªÉn th·ªã.")